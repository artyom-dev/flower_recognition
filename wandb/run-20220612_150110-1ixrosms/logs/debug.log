2022-06-12 15:01:10,810 INFO    MainThread:6368 [wandb_setup.py:_flush():76] Loading settings from C:\Users\USER\.config\wandb\settings
2022-06-12 15:01:10,810 INFO    MainThread:6368 [wandb_setup.py:_flush():76] Loading settings from C:\Users\USER\Desktop\Task\wandb\settings
2022-06-12 15:01:10,810 INFO    MainThread:6368 [wandb_setup.py:_flush():76] Loading settings from environment variables: {}
2022-06-12 15:01:10,810 INFO    MainThread:6368 [wandb_setup.py:_flush():76] Inferring run settings from compute environment: {'program': '<python with no main file>'}
2022-06-12 15:01:10,810 INFO    MainThread:6368 [wandb_init.py:_log_setup():428] Logging user logs to C:\Users\USER\Desktop\Task\wandb\run-20220612_150110-1ixrosms\logs\debug.log
2022-06-12 15:01:10,811 INFO    MainThread:6368 [wandb_init.py:_log_setup():429] Logging internal logs to C:\Users\USER\Desktop\Task\wandb\run-20220612_150110-1ixrosms\logs\debug-internal.log
2022-06-12 15:01:10,811 INFO    MainThread:6368 [wandb_init.py:_jupyter_setup():378] configuring jupyter hooks <wandb.sdk.wandb_init._WandbInit object at 0x0000018209180190>
2022-06-12 15:01:10,811 INFO    MainThread:6368 [wandb_init.py:init():462] calling init triggers
2022-06-12 15:01:10,811 INFO    MainThread:6368 [wandb_init.py:init():465] wandb.init called with sweep_config: {}
config: {'epochs': 50, 'classes': 5, 'batch_size': 128, 'learning_rate': 0.005, 'dataset': 'Flower recognition', 'architecture': 'InceptionV3'}
2022-06-12 15:01:10,811 INFO    MainThread:6368 [wandb_init.py:init():515] starting backend
2022-06-12 15:01:10,811 INFO    MainThread:6368 [backend.py:_multiprocessing_setup():97] multiprocessing start_methods=spawn, using: spawn
2022-06-12 15:01:10,814 INFO    MainThread:6368 [backend.py:ensure_launched():217] starting backend process...
2022-06-12 15:01:10,873 INFO    MainThread:6368 [backend.py:ensure_launched():222] started backend process with pid: 5472
2022-06-12 15:01:10,873 INFO    MainThread:6368 [wandb_init.py:init():525] backend started and connected
2022-06-12 15:01:10,889 INFO    MainThread:6368 [wandb_run.py:_label_probe_notebook():1089] probe notebook
2022-06-12 15:01:10,889 INFO    MainThread:6368 [wandb_run.py:_label_probe_notebook():1099] Unable to probe notebook: 'NoneType' object has no attribute 'get'
2022-06-12 15:01:10,889 INFO    MainThread:6368 [wandb_init.py:init():596] updated telemetry
2022-06-12 15:01:10,889 INFO    MainThread:6368 [wandb_init.py:init():627] communicating run to backend with 30 second timeout
2022-06-12 15:01:12,607 INFO    MainThread:6368 [wandb_run.py:_on_init():1924] communicating current version
2022-06-12 15:01:12,904 INFO    MainThread:6368 [wandb_run.py:_on_init():1928] got version response 
2022-06-12 15:01:12,904 INFO    MainThread:6368 [wandb_init.py:init():662] starting run threads in backend
2022-06-12 15:01:17,925 WARNING MainThread:6368 [wandb_init.py:init():1020] interrupted
Traceback (most recent call last):
  File "C:\Users\USER\anaconda3\lib\site-packages\wandb\sdk\wandb_init.py", line 999, in init
    run = wi.init()
  File "C:\Users\USER\anaconda3\lib\site-packages\wandb\sdk\wandb_init.py", line 673, in init
    _ = backend.interface.communicate_run_start(run_obj)
  File "C:\Users\USER\anaconda3\lib\site-packages\wandb\sdk\interface\interface.py", line 234, in communicate_run_start
    result = self._communicate_run_start(run_start)
  File "C:\Users\USER\anaconda3\lib\site-packages\wandb\sdk\interface\interface_shared.py", line 440, in _communicate_run_start
    result = self._communicate(rec)
  File "C:\Users\USER\anaconda3\lib\site-packages\wandb\sdk\interface\interface_shared.py", line 226, in _communicate
    return self._communicate_async(rec, local=local).get(timeout=timeout)
  File "C:\Users\USER\anaconda3\lib\site-packages\wandb\sdk\interface\router.py", line 37, in get
    is_set = self._object_ready.wait(timeout)
  File "C:\Users\USER\anaconda3\lib\threading.py", line 574, in wait
    signaled = self._cond.wait(timeout)
  File "C:\Users\USER\anaconda3\lib\threading.py", line 316, in wait
    gotit = waiter.acquire(True, timeout)
KeyboardInterrupt
